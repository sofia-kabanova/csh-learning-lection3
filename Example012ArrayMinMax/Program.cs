// Алгоритм сортировки методом выбора, 
//ещё его называют алгоритм сортировки методом минимакса
// или иногда просто называют методом максимального, 
//или выбора максимального или выбора минимального и так далее. 
//Узнаем, в чём особенность (суть) этого алгоритма.
// Есть какая-то последовательность чисел. 
//Задача:
// 1. Найти позицию минимального элемента в неотсортированной части массива.
// 2. Произвести обмен этого значения со значением первой неотсортированной позиции.
// 3. Повторять пока есть неотсортированные элементы.
// Было:18326457
// Результат:12345678
int[] arr={1, 5, 4, 3, 2, 6, 7, 1, 1}; 
// подзадача. выводит данный массив на экран
void PrintArray(int[] array)//методб аргумент - массив
{
    int count = array.Length; // кол-во элементов массива
    for (int i=0; i<count; i++)// цикл, пробегаем
    // по всем элементам и показываем на экран
    {
        Console.Write($"{array[i]} ");//выводим
    }
    Console.WriteLine(); // пустая строка
}
void SelectionSort(int[] array)// метод,  аргумент - массив
// метод, который упорядочивает массив
{
    for (int i = 0; i < array.Length-1; i++)//цикл
    // пробегаем по всем элементам массива
    {
        int minPosition = i;//определяем позицию, на которую смотрим
        //  - рабочая позиция элемента (индекс i)
        // ищем мин элемент
        for (int j = i+1; j < array.Length; j++)// цикл
        {
            if(array[j] < array[minPosition])//смотри текущий элемент и
            {
                 minPosition = j; // сохраняем мин позицию
            } 
        }
        // меняем значение минимальной позиции с той, которую нашли
        // замена позиций:
        int temporary = array[i]; // временный элемент, в которы кладем
        //рабочая позицию (индекс i)
        array[i] = array[minPosition]; // кладем в i минимальный найденный элемент
        array[minPosition] = temporary; // в минимальную позицию кладем элемент,
        // который был временный 
    }
}
PrintArray(arr); // обращаемся к методу
SelectionSort(arr); // вызываем метод 
PrintArray(arr);// печатаем упорядоченный массив
